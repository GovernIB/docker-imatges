###########################################################################################################################
# Requisitos
# (1) Añadir al fichero hosts (en Unix/Linux /etc/hosts; en Windows C:\Windows\System32\drivers\etc\hosts) la dirección
# 127.0.0.1 keycloak-goib
#
# (2) Crear el directorio local donde se escaneará el directorio de deployments
# Unix/Linux: $ mkdir /tmp/deployments && chmod 755 /tmp/deployments
# Windows: crear directorio C:\tmp\deployments y añadirle permisos de lectura a todos los usuarios
#
# (3) Para probar la aplicación /goibusuari es necesario copiar el fichero goibusuari.ear dentro del directorio local de deployments
###########################################################################################################################

version: '3.6'

services:
   keycloak:
      build: ./keycloak
      image: goib/keycloak
      container_name: "keycloak-goib"
      hostname: keycloak-goib
      environment:
         DB_VENDOR: POSTGRES
         DB_ADDR: postgres
         DB_DATABASE: keycloak
         DB_USER: keycloak
         DB_SCHEMA: public
         DB_PASSWORD: password
         KEYCLOAK_USER: admin
         KEYCLOAK_PASSWORD: admin
         PROXY_ADDRESS_FORWARDING: "false"
      ports:
         - 8080:8080
      healthcheck:
         test: ["CMD", "curl", "-f", "http://keycloak-goib:8180/auth/realms/GOIB"]
         interval: 10s
         timeout: 10s
         retries: 5
      networks:
         - backend
      
          
   wildfly:
      build: ./wildfly
      image: wildfly-goib
      container_name: "wildfly-goib"
      hostname: wildfly-goib
      environment:
         - ADMIN_USER=admin
         - ADMIN_PASSWORD=admin
      ports:
         - 8081:8080
         - 8082:9990
      volumes:
         - ./wildfly/deployments:/opt/jboss/wildfly/standalone/deployments         
         - ./wildfly/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
         #- ./cacerts:/etc/pki/ca-trust/extracted/java/cacerts
         #keytool -import -alias localhost -keystore cacerts -file apache/server.crt 
      depends_on:
         - keycloak
         - postgres
      #networks:
      #   - backend
           
   postgres:
      image: postgres:13.1
      container_name: postgres
      hostname: postgres
      healthcheck:
         test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
         timeout: 45s
         interval: 10s
         retries: 10
      restart: always
      environment:
         POSTGRES_DB: keycloak
         POSTGRES_USER: keycloak
         POSTGRES_PASSWORD: password
      #- APP_DB_USER=projectebaseexemple
      #- APP_DB_PASS=projectebaseexemple
      #- APP_DB_NAME=projectebaseexemple
      volumes:
         - ./db:/docker-entrypoint-initdb.d/          
      ports:
         - 5432:5432
      networks:
         - backend
   pgadmin:
      image: dpage/pgadmin4:4.23
      container_name: pgadmin
      hostname: pgadmin
      environment:
         PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
         PGADMIN_DEFAULT_PASSWORD: password
         PGADMIN_LISTEN_PORT: 80
      ports:
         - 8083:80
      depends_on:
         - postgres
      networks:
         - backend
networks:
   backend:
